{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_components/alert.component.ts","./src/app/_components/alert.component.html","./src/app/_components/index.ts","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_services/alert.service.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/user.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/sign-in/sign-in.component.ts","./src/app/sign-in/sign-in.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AlertService } from '../_services';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    private subscription: Subscription;\r\n    message: any;\r\n\r\n    constructor(private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.alertService.getAlert()\r\n            .subscribe(message => {\r\n                switch (message && message.type) {\r\n                    case 'success':\r\n                        message.cssClass = 'alert alert-success';\r\n                        break;\r\n                    case 'error':\r\n                        message.cssClass = 'alert alert-danger';\r\n                        break;\r\n                }\r\n\r\n                this.message = message;\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}","<div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div>","export * from './alert.component';","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","export * from './auth.guard';\r\nexport * from './jwt.interceptor';\r\nexport * from './error.interceptor';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AlertService {\r\n    private subject = new Subject<any>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n        this.router.events.subscribe(event => {\r\n            if(event instanceof NavigationStart) {\r\n                if(this.keepAfterRouteChange) {\r\n                    this.keepAfterRouteChange = false;\r\n                } else {\r\n                    this.clear();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    getAlert(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    success(message: string, keepAfterRouteChange = false) {\r\n        this.keepAfterRouteChange = keepAfterRouteChange;\r\n        this.subject.next({ type: 'success', text: message});\r\n    }\r\n\r\n    error(message: string, keepAfterRouteChange = false) {\r\n        this.keepAfterRouteChange = keepAfterRouteChange;\r\n        this.subject.next({ type: 'error', text: message});\r\n    }\r\n\r\n    clear() {\r\n        this.subject.next();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, from } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<any>;\r\n    public currentUser: Observable<any>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue() {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.http.post<any>(`http://localhost:8099/users/authenticate`, { username, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage and set current user to null\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}","import { from } from 'rxjs';\r\n\r\nexport * from './authentication.service';\r\nexport * from './user.service';\r\nexport * from './alert.service';","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User } from '../_models';\r\n\r\n@Injectable ({providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    get(id) {\r\n        return this.get(`http://localhost:8099/users/${id}`);\r\n    }\r\n\r\n    register(user) {\r\n        return this.http.post(`/users/patients`, user);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`http://localhost:8099/users/patients/${id}`);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthGuard } from './_helpers';\r\nimport { UserComponent } from './user/user.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: \"\", pathMatch: \"full\", redirectTo: \"/home\"},\r\n  {path: \"home\", component: HomeComponent },\r\n  {path: \"signIn\", component: SignInComponent},\r\n  {path: \"register\", component: RegisterComponent},\r\n  {path: \"user\", component: UserComponent, canActivate: [AuthGuard]},\r\n\r\n  { path: '**', redirectTo: '' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from './_services';\r\nimport { User } from './_models';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  currentUser: User;\r\n  title = 'medical-crm-angular';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n  }\r\n\r\n  logout() {\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/sing-in']);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark\" style=\"background-color: seagreen;\">\r\n    <h3 class=\"text-light px-md-1\">Medical CRM Project</h3>\r\n    <div class=\"collapse navbar-collapse\">\r\n        <ul class=\"navbar-nav ml-md-1\">\r\n            <li class=\"nav-item active\">\r\n                <a class=\"text-light\" routerLink=\"/home\">Home</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <a class=\"mr-md-2\" routerLink=\"/signIn\">\r\n        <button type=\"button\" class=\"btn btn-info\" *ngIf=\"!currentUser\">Login</button>\r\n    </a>\r\n    <a class=\"mr-md-2\" routerLink=\"/register\">\r\n        <button type=\"button\" class=\"btn btn-info\" *ngIf=\"!currentUser\">Register</button>\r\n    </a>\r\n    <a class=\"mr-md-2\" routerLink=\"/\">\r\n        <button type=\"button\" class=\"btn btn-info\" *ngIf=\"currentUser\" (click)=\"logout()\">Logout</button>\r\n    </a>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n<div class=\"fixed-bottom text-muted pl-md-3\">\r\n    <small>Made by Małgorzata Tabor, Grzegorz Albrewczyński and Łukasz Stępkowski</small>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\r\nimport { UserComponent } from './user/user.component';\r\nimport { AlertComponent } from './_components'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    SignInComponent,\r\n    UserComponent,\r\n    AlertComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-3 mx-1 my-1 px-3 py-3\">\r\n    <img src=\"assets/img/placeholder-small.png\" class=\"card-img-top\" style=\"max-height: 200px;\">\r\n    <div class=\"card-body\">\r\n        <h3 class=\"card-title\">Welcome!</h3>\r\n        <p class=\"card-text\">This is a Medical CRM project. Please do not use real data.</p>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AlertService, AuthenticationService, UserService } from '../_services';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private userService: UserService,\r\n    private alertService: AlertService\r\n  ) {\r\n    if (this.authenticationService.currentUserValue) {\r\n      this.router.navigate(['/user']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      surname: ['', Validators.required],\r\n      login: ['', Validators.required],\r\n      pesel: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(8)]]\r\n    });\r\n  }\r\n\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    this.alertService.clear();\r\n\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.userService.register(this.registerForm.value)\r\n    .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.alertService.success('Registration Succesful', true);\r\n          this.router.navigate(['/signIn']);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        }\r\n\r\n      );\r\n  }\r\n\r\n}\r\n","<div class=\"mx-auto py-md-5\" style=\"width: 200px;\">\r\n    <h2>Register</h2>\r\n</div>\r\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"mx-auto w-50 px-md-5 py-md-5\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n            <label for=\"name\">Name</label>\r\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\">\r\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.name.errors.required\">Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <label for=\"surname\">Surname</label>\r\n            <input type=\"text\" formControlName=\"surname\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.surname.errors }\">\r\n            <div *ngIf=\"submitted && f.surname.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.surname.errors.required\">Surname is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"login\">E-mail</label>\r\n        <input type=\"email\" formControlName=\"login\" class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.login.errors }\">\r\n        <div *ngIf=\"submitted && f.login.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.login.errors.required\">Login is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"pesel\">PESEL</label>\r\n        <input type=\"text\" formControlName=\"pesel\" class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.pesel.errors }\">\r\n        <div *ngIf=\"submitted && f.pesel.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.pesel.errors.required\">PESEL is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\r\n            <small id=\"passwordHelp\" class=\"form-text text-muted\">Password must consist of at least 8 characters and\r\n                contain at least 1 capital letter, 1 small letter,\r\n                1 digit and one special character</small>\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8 characters</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <label for=\"passwordConfirm\">Confirm Password</label>\r\n            <input type=\"password\" class=\"form-control\" id=\"passwordConfirm\">\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group form-check\">\r\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"regulations\">\r\n        <label for=\"regulations\" class=\"form-check-label\">I have read the Terms and Conditions.</label>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Register\r\n        </button>\r\n        <a routerLink=\"/\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AlertService, AuthenticationService } from '../_services'\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private alertService: AlertService\r\n  ) {\r\n    if (this.authenticationService.currentUserValue) {\r\n      this.router.navigate(['/user']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      login: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/user';\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    this.alertService.clear();\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService.login(this.f.login.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"mx-auto py-md-5\" style=\"width: 200px;\">\r\n    <h2>Login</h2>\r\n</div>\r\n<div>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"mx-auto w-25 px-md-5 py-md-5\">\r\n        <div class=\"form-group\">\r\n            <label for=\"login\">Login</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"login\" [ngClass]=\"{ 'is-invalid': submitted && f.login.errors }\">\r\n            <div *ngIf=\"f.login.errors.required\">Login is required</div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                Login\r\n            </button>\r\n            <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { User } from '../_models';\r\nimport { UserService, AuthenticationService} from '../_services';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  currentUser: User;\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private userService: UserService\r\n  ) {\r\n    this.currentUser = this.authenticationService.currentUserValue;\r\n   }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n}\r\n","<h1>Hi {{currentUser.name}}!</h1>\r\n<h3>List of Your appoitments</h3>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}